<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="20.11.1.2">
<procedure name="main">
<interface/>
<body>
<c>*</c>
<c>* With this sample, you can check and set the IP address, subnetmask, and gateway of a Mech-Eye Industrial 3D Camera. </c>
<c>* Changes of the IP settings take effect after the camera is restarted.</c>
<c>* </c>
<c></c>
<c>* Discover all available cameras and store them in the "MechEyeCameras" variable.</c>
<c>* You can replace "MechEye" with the "user_name" or "unique_name" of the camera that needs to be connected.</c>
<l>DeviceInfo := 'MechEye'</l>
<l>info_framegrabber ('GigEVision2', 'device', Info, DeviceInfos)</l>
<l>tuple_regexp_select(DeviceInfos, DeviceInfo, MechEyeCameras)</l>
<l>dev_inspect_ctrl (MechEyeCameras)</l>
<c>* Stop execution if no cameras are found.</c>
<l>if (not |MechEyeCameras|)</l>
<l>    stop()</l>
<l>endif</l>
<c></c>
<c>* Connect to the camera: if "user_name" or "unique_name" is not set in "DeviceInfo", the first camera in "MechEyeCameras" will be connected. </c>
<l>open_framegrabber ('GigEVision2', 1, 1, 0, 0, 0, 0, 'default', -1, 'default', -1, 'false', 'default', MechEyeCameras[0], 0, -1, AcqHandle)</l>
<c></c>
<c>* Obtain the available parameter names.</c>
<l>get_framegrabber_param (AcqHandle, 'available_param_names', ParameterValues)</l>
<c>* Obtain the current camera IP address, subnet mask, and default gateway.</c>
<l>try </l>
<l>    get_framegrabber_param (AcqHandle, 'GevCurrentIPAddress', CurrentIPAddress)</l>
<l>    get_framegrabber_param (AcqHandle, 'GevCurrentSubnetMask', CurrentSubnetMask)</l>
<l>    get_framegrabber_param (AcqHandle, 'GevCurrentDefaultGateway', CurrentDefaultGateway)</l>
<l>catch (Exception)</l>
<c>    * Stop execution if the above nodes are not available.</c>
<l>    stop()</l>
<l>endtry</l>
<c></c>
<c>* Transform the obtained camera IP address, subnet mask, and default gateway into the readable string format.</c>
<l>CurrentIPAddressString := (rsh(CurrentIPAddress, 24) band 0xff) + '.' + (rsh(CurrentIPAddress, 16) band 0xff) + '.' + (rsh(CurrentIPAddress, 8) band 0xff) + '.' + (rsh(CurrentIPAddress, 0) band 0xff)</l>
<l>CurrentSubnetMaskString := (rsh(CurrentSubnetMask, 24) band 0xff) + '.' + (rsh(CurrentSubnetMask, 16) band 0xff) + '.' + (rsh(CurrentSubnetMask, 8) band 0xff) + '.' + (rsh(CurrentSubnetMask, 0) band 0xff)</l>
<l>CurrentDefaultGatewayString := (rsh(CurrentDefaultGateway, 24) band 0xff) + '.' + (rsh(CurrentDefaultGateway, 16) band 0xff) + '.' + (rsh(CurrentDefaultGateway, 8) band 0xff) + '.' + (rsh(CurrentDefaultGateway, 0) band 0xff)</l>
<c></c>
<c>* For static IP address: enter the new camera IP address, subnet mask, and default gateway in the string format.</c>
<l>IPAddressString := '192.168.20.121'</l>
<l>SubnetMaskString := '255.255.255.0'</l>
<l>DefaultGatewayString := '192.168.1.1'</l>
<c></c>
<c>* Transform the strings to integers (hexadecimal).</c>
<l>tuple_split(IPAddressString, '.', IPAddressParts)</l>
<l>IPAddress := number(IPAddressParts[0]) * lsh(1,24) + number(IPAddressParts[1]) * lsh(1,16) + number(IPAddressParts[2]) * lsh(1,8) + number(IPAddressParts[3]) </l>
<l>tuple_split(SubnetMaskString, '.', SubnetMaskParts)</l>
<l>SubnetMask := number(SubnetMaskParts[0]) * lsh(1,24) + number(SubnetMaskParts[1]) * lsh(1,16) + number(SubnetMaskParts[2]) * lsh(1,8) + number(SubnetMaskParts[3]) </l>
<l>tuple_split(DefaultGatewayString, '.', DefaultGatewayParts)</l>
<l>DefaultGateway := number(DefaultGatewayParts[0]) * lsh(1,24) + number(DefaultGatewayParts[1]) * lsh(1,16) + number(DefaultGatewayParts[2]) * lsh(1,8) + number(DefaultGatewayParts[3]) </l>
<c></c>
<c>* Set the new settings into the camera.</c>
<l>try </l>
<c>    * For static IP address: keep this line as is to enable the persistent IP configuration.</c>
<c>    * For dynamic IP address: change "true" to "false" to disable the persistent IP configuration (and thus enabling IP address assignment via DHCP).</c>
<l>    set_framegrabber_param (AcqHandle, 'GevCurrentIPConfigurationPersistentIP', true)</l>
<c></c>
<c>    * For static IP address: set the new camera IP address, subnet mask and default gateway into the camera.</c>
<l>    set_framegrabber_param (AcqHandle, 'GevPersistentIPAddress', IPAddress)</l>
<l>    set_framegrabber_param (AcqHandle, 'GevPersistentSubnetMask', SubnetMask)</l>
<l>    set_framegrabber_param (AcqHandle, 'GevPersistentDefaultGateway', DefaultGateway)</l>
<l>catch (Exception)</l>
<c>    * Stop execution if the above nodes are not available.</c>
<l>    stop()</l>
<l>endtry</l>
<c></c>
<c>* Close the frame grabber.</c>
<l>close_framegrabber (AcqHandle)</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
